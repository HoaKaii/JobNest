@model JobsFinder_Main.Models.JobModel

@if (!User.Identity.IsAuthenticated)
{
    { Html.RenderAction("Login_Recruiter", "User"); }
}
else
{
    var companyDao = new Model.DAO.CompanyDao();
    ViewBag.CompanyId = new SelectList(companyDao.ListInUser(User.Identity.Name), "ID", "Name", Model.CompanyID);

    var jobCategoryDao = new Model.DAO.JobCategoryDao();
    ViewBag.JobCategoryId = new SelectList(jobCategoryDao.ListAll(), "ID", "Name", Model.CategoryID);

    var careerDao = new Model.DAO.CareerDao();
    ViewBag.CareerId = new SelectList(careerDao.ListAll(), "ID", "Name", Model.CarrerID);

    <h5 class="mb-3">Post job vacancy</h5>

    using (Html.BeginForm("CreateJob", "User", FormMethod.Post))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group company-section">
                <p>Select recruiting company</p>
                <div class="col-md-10">
                    @if (ViewBag.CompanyId != null)
                    {
                        @Html.DropDownListFor(model => model.CompanyID, (SelectList)ViewBag.CompanyId, new { @class = "form-control" })
                    }
                    else
                    {
                        <a href="/User/CreateCompany">Create new company</a>
                    }
                    @Html.ValidationMessageFor(model => model.CompanyID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <p>Job name</p>
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.Name, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <p>Job description</p>
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.Description, new { @class = "form-control", @id = "txtDescription" })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <p>Candidate requirements</p>
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.RequestCandidate, new { @class = "form-control", @id = "txtRequestCandidate" })
                    @Html.ValidationMessageFor(model => model.RequestCandidate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <p>Benefits</p>
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.Interest, new { @class = "form-control", @id = "txtInterest" })
                    @Html.ValidationMessageFor(model => model.Interest, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <p>Application process</p>
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.Details, new { @class = "form-control", @id = "txtDetail" })
                    @Html.ValidationMessageFor(model => model.Details, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <p>Salary</p>
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Salary, new SelectList(new List<SelectListItem>
                    {
                        new SelectListItem { Text = "Negotiable", Value = "False" },
                        new SelectListItem { Text = "Enter specific value", Value = "True" }
                    }, "Value", "Text"), new { @class = "form-control", onchange = "salaryChange(this)" })
                    @Html.ValidationMessageFor(model => model.Salary, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group" id="salary-min-max" style="display:none">
                <p>Minimum salary</p>
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.SalaryMin, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.SalaryMin, "", new { @class = "text-danger" })
                </div>
                <p>Maximum salary</p>
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.SalaryMax, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.SalaryMax, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <p>Number of vacancies</p>
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.Quantity, new { @class = "form-control", type = "number", min = "0", max = "100" })
                    @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <p>Select job category</p>
                <div class="col-md-10">
                    @if (ViewBag.JobCategoryId != null)
                    {
                        @Html.DropDownListFor(model => model.CategoryID, (SelectList)ViewBag.JobCategoryId, new { @class = "form-control" })
                    }
                    else
                    {
                        @Html.DropDownListFor(model => model.CategoryID, null, new { @class = "form-control" })
                    }
                    @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <p>Select industry category</p>
                <div class="col-md-10">
                    @if (ViewBag.CareerId != null)
                    {
                        @Html.DropDownListFor(model => model.CarrerID, (SelectList)ViewBag.CareerId, new { @class = "form-control" })
                    }
                    else
                    {
                        @Html.DropDownListFor(model => model.CarrerID, null, new { @class = "form-control" })
                    }
                    @Html.ValidationMessageFor(model => model.CarrerID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <p>Application deadline</p>
                <div class="col-md-10">
                    <div class="input-group date">
                        @Html.TextBoxFor(model => model.Deadline, new { @class = "form-control" })
                        <span class="input-group-addon">
                            <span class="glyphicon glyphicon-calendar"></span>
                        </span>
                    </div>
                    @Html.ValidationMessageFor(model => model.Deadline, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <p>Years of experience</p>
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.Experience, new { @class = "form-control", type = "number", min = "0", max = "5" })
                    @Html.ValidationMessageFor(model => model.Experience, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <p>Gender</p>
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Gender, new List<SelectListItem>
                    {
                        new SelectListItem { Text = "Male", Value = "Male" },
                        new SelectListItem { Text = "Female", Value = "Female" },
                        new SelectListItem { Text = "All", Value = "All" }
                    }, "Select gender", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <p>Work location</p>
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.WorkLocation, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.WorkLocation, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Complete" class="btn btn-outline-primary" style="border-radius: 4px; font-size: 14px; font-weight: 500; text-transform: inherit;" />
                </div>
            </div>
        </div>
    }

    <style>
        .form-control {
            border-bottom: 1px solid #EEE !important;
            font-size: 16px;
        }

        .col-md-10 {
            width: 100%;
        }
    </style>

}
