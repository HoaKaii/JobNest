@model Model.EF.Blog

@{
    ViewBag.Title = "Detail";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@functions {
    public int CalculateReadingTime(string description)
    {
        string[] words = description.Split(new char[] { ' ', '.', ',', '!', '?', ';', ':', '-' }, StringSplitOptions.RemoveEmptyEntries);
        int wordCount = words.Length;

        double secondsPerWord = 0.25;

        int readingTime = (int)Math.Ceiling(wordCount * secondsPerWord / 60);

        return readingTime;
    }
}

<section class="section py-3">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-lg-9 mb-5 mb-lg-0">
                <article>
                    <div class="post-slider mb-4">
                        <img src="@Model.Image" class="card-img" alt="post-thumb">
                    </div>

                    <h1 class="h2">@Model.Name</h1>
                    <ul class="card-meta my-3 list-inline">
                        <li class="list-inline-item">
                            <a href="#" class="card-meta-author">
                                <img src="/Data/images/admin.jpg">
                                <span>Admin</span>
                            </a>
                        </li>
                        <li class="list-inline-item">
                            <i class="ti-timer"></i>@CalculateReadingTime(Model.Description) min(s) to read
                        </li>
                        <li class="list-inline-item">
                            <i class="ti-calendar"></i>@Model.CreatedDate
                        </li>
                        <li class="list-inline-item">
                            <ul class="card-meta-tag list-inline">
                                @*@foreach (var tag in Model.Tags)
                                {
                                    <li class="list-inline-item"><a href="@Url.Action("Tag", "Blog", new { tag = tag })">@tag</a></li>
                                }*@
                            </ul>
                        </li>
                    </ul>
                    <div class="content">
                        <div id="less">
                            <p>@Html.Raw(Model.Summary)</p>
                        </div>
                        <p id="dots">...</p>
                        <div id="more" style="display: none;">
                            <p>@Html.Raw(Model.Description)</p>
                        </div>
                        <button onclick="toggleDescription()" id="readMoreBtn" class="btn btn-link">Read more</button>
                    </div>
                </article>
            </div>

            <div class="col-lg-9 col-md-12">
                <div class="mb-5 border-top mt-4 pt-5">
                    <h3 class="mb-4">Comments</h3>
                    <!-- Phần bình luận -->
                </div>

                <div>
                    <h3 class="mb-4">Leave a Reply</h3>
                    <!-- Form bình luận -->
                </div>
            </div>
        </div>
    </div>
</section>

<script>
    function toggleDescription() {
        var dots = document.getElementById("dots");
        var moreText = document.getElementById("more");
        var btnText = document.getElementById("readMoreBtn");

        if (dots.style.display === "none") {
            dots.style.display = "inline";
            btnText.innerHTML = "Read more";
            moreText.style.display = "none";
        } else {
            dots.style.display = "none";
            btnText.innerHTML = "Read less";
            moreText.style.display = "inline";
        }
    }
</script>
