@model Model.EF.KyNang

@if (User.Identity.IsAuthenticated)
{
    <div id="formUpdateKyNang@(Model.ID)" class="p-4 form-profile">
        @using (Html.BeginForm("Update", "KyNang", FormMethod.Post))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h5 class="m-0">Skills</h5>
                <hr class="my-3" />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group mb-4">
                    <p class="label-title">Skill name</p>
                    <div class="col-md-10" style="width: 100%;">
                        @Html.TextBoxFor(model => model.TenKyNang, new { @class = "form-control", @placeholder = "Enter a skill name" })
                        @Html.ValidationMessageFor(model => model.TenKyNang, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group mb-4">
                    <p class="label-title">Review</p>
                    <div class="col-md-10" style="width: 100%;">
                        @Html.TextBoxFor(model => model.DanhGia, new { @class = "form-control", @type = "hidden" })
                        @Html.TextBoxFor(model => model.Caption, new { @class = "form-control", @type = "hidden" })
                        @Html.ValidationMessageFor(model => model.DanhGia, "", new { @class = "text-danger" })
                    </div>
                    <div class="box-rating d-flex flex-row">
                        <i class="bi bi-star"></i>
                        <i class="bi bi-star"></i>
                        <i class="bi bi-star"></i>
                        <i class="bi bi-star"></i>
                        <i class="bi bi-star"></i>
                    </div>
                    <p class="rating-caption" style="height: 26px;">Select the corresponding number of stars for your skill level</p>
                </div>

                <style>
                    .box-rating i {
                        font-size: 20px;
                        padding: 4px;
                        margin-right: 8px;
                    }

                        .box-rating i.bi-star-fill {
                            color: gold;
                        }
                </style>

                <script>
                    var stars = document.querySelectorAll(".bi-star");
                    var inputDanhGia = document.getElementById("DanhGia");
                    var ratingCaption = document.querySelector(".rating-caption");
                    var caption = document.getElementById("Caption");
                    var captions = [
                        "Just heard about it",
                        "No completed product yet",
                        "Completed product available",
                        "Completed product within the same team",
                        "Proficient"
                    ];

                    stars.forEach(function (star, index) {
                        star.addEventListener("click", function () {
                            var rating = index + 1;
                            inputDanhGia.value = rating;
                            updateStars();
                            ratingCaption.textContent = captions[rating - 1];
                            caption.value = ratingCaption.textContent;
                        });

                        star.addEventListener("mouseover", function () {
                            for (var i = 0; i <= index; i++) {
                                stars[i].classList.remove("bi-star");
                                stars[i].classList.add("bi-star-fill");
                            }

                            for (var j = index + 1; j < stars.length; j++) {
                                stars[j].classList.add("bi-star");
                                stars[j].classList.remove("bi-star-fill");
                            }
                            ratingCaption.textContent = captions[index];
                        });

                        star.addEventListener("mouseout", function () {
                            updateStars();
                            var rating = parseInt(inputDanhGia.value);
                            ratingCaption.textContent = captions[rating - 1];
                        });
                    });

                    function updateStars() {
                        stars.forEach(function (star, index) {
                            star.classList.remove("bi-star-fill");
                            star.classList.add("bi-star");
                        });

                        var rating = parseInt(inputDanhGia.value);
                        for (var i = 0; i < rating; i++) {
                            stars[i].classList.remove("bi-star");
                            stars[i].classList.add("bi-star-fill");
                        }
                    }
                </script>

                <div class="form-group">
                    <p class="label-title">Description</p>
                    <div class="col-md-10" style="width: 100%;">
                        @Html.TextAreaFor(model => model.MoTaChiTiet, new { @class = "form-control pt-2", @placeholder = "Detailed description" })
                        @Html.ValidationMessageFor(model => model.MoTaChiTiet, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group mb-2">
                    <div class="col-md-offset-2 col-md-10 d-flex justify-content-center" style="width: 100%">
                        <input type="submit" value="Complete" class="btn btn-primary" style="border-radius: 4px;" />
                    </div>
                </div>
            </div>
        }
    </div>
}
else
{
    { Html.RenderAction("Login", "User"); }
}